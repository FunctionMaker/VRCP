<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.carfi.vrcp.dao.sondao.OrganizationDao">

	<resultMap type="Organization" id="organizationResultMap">
		<id column="orgId" property="id"/>
		<result column="orgAlias" property="alias"/>
		<result column="orgFullName" property="fullName"/>
		<result column="orgContactMan" property="contactMan"/>
		<result column="orgContactTel" property="contactTel"/>
		<result column="orgTerminalNum" property="terminalNum"/>
		<result column="orgHasSonNode" property="hasSonNode"/>
		<result column="orgFixedTel" property="fixedTel"/>
		<result column="orgSpareContact" property="spareContact"/>
		<result column="orgEmail" property="email"/>
		<result column="orgAddress" property="address"/>
		<result column="orgRemark" property="remark"/>
		<result column="level" property="level"/>
		<result column="is_effective" property="isEffective"/>
		<association property="parent" javaType="Organization">
			<id column="parentId" property="id"/>
			<result column="parentAlias" property="alias"/>
			<result column="parentFullName" property="fullName"/>
			<result column="parentContactMan" property="contactMan"/>
			<result column="parentContactTel" property="contactTel"/>
			<result column="parentTerminalNum" property="terminalNum"/>
			<result column="parentHasSonNode" property="hasSonNode"/>
			<result column="parentFixedTel" property="fixedTel"/>
			<result column="parentSpareContact" property="spareContact"/>
			<result column="parentEmail" property="email"/>
			<result column="parentAddress" property="address"/>
			<result column="parentRemark" property="remark"/>
			<result column="parentLevel" property="level"/>
			<result column="is_effective" property="isEffective"/>
			<association property="parent" javaType="Organization">
				<id column="grandParentId" property="id"/>
			</association>
		</association>
	</resultMap>
	
	<sql id="selectSql">
		select org.id orgId,org.alias orgAlias,org.full_name orgFullName,
			org.contact_man orgContactMan,org.contact_tel orgContactTel,
			org.terminal_num orgTerminalNum,org.has_son_node orgHasSonNode,org.level level,
			org.fixed_tel orgFixedTel,org.spare_contact orgSpareContact,
			org.email orgEmail,org.address orgAddress,org.remark orgRemark,
			parent.id parentId,parent.alias parentAlias,parent.full_name parentFullName,
			parent.contact_man parentContactMan,parent.contact_tel parentContactTel,
			parent.terminal_num parentTerminalNum,parent.has_son_node parentHasSonNode,parent.level parentLevel,
			parent.fixed_tel parentFixedTel,parent.spare_contact parentSpareContact,
			parent.email parentEmail,parent.address parentAddress,parent.remark parentRemark,parent.parent_id grandParentId
			from t_organization org left join t_organization parent on org.parent_id=parent.id
	</sql>
	
	<select id="queryAllByQuery" parameterType="OrganizationQuery" resultMap="organizationResultMap">
			<include refid="selectSql"/>
			where org.is_effective=1
			<if test="name != null">
				and org.full_name like concat('%',#{name},'%') 
			</if>
			<if test="parentId != null">
				and org.parent_id=#{parentId}
			</if>
			<if test="parentId == null">
				and org.parent_id is null
			</if>
			limit #{beginIndex},#{pageNum}
	</select>
	
	<select id="queryTotalCountByQuery" parameterType="OrganizationQuery" resultType="int">
		select count(*) from t_organization where is_effective=1
		<if test="name != null">
			and full_name like concat('%',#{name},'%') 
		</if>
		<if test="parentId != null">
			and parent_id=#{parentId}
		</if>
		<if test="parentId == null">
			and parent_id is null
		</if>
	</select>
	
	<select id="queryTotalCount" resultType="int">
		select count(*) from t_organization where is_effective=1
	</select>
	
	<insert id="save" parameterType="Organization" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		insert into t_organization 
		(alias,full_name,contact_man,contact_tel,fixed_tel,spare_contact,email,address,terminal_num,remark,has_son_node,parent_id,level)
		values(#{alias},#{fullName},#{contactMan},#{contactTel},#{fixedTel},#{spareContact},#{email},#{address},#{terminalNum},#{remark},#{hasSonNode},#{level},#{parent.id})
	</insert>
	
	<delete id="delete" parameterType="long">
		delete from t_organization where id=#{id}
	</delete>
	
	<update id="update" parameterType="Organization">
		update t_organization 
		set alias=#{alias},full_name=#{fullName},contact_man=#{contactMan},contact_tel=#{contactTel},fixed_tel=#{fixedTel},spare_contact=#{spareContact},
		email=#{email},address=#{address},terminal_num=#{terminalNum},remark=#{remark},has_son_node=#{hasSonNode},level=#{level},parent_id=#{parent.id} where id=#{id}
	</update>
	
	<update id="setNotEffective" parameterType="long">
		update t_organization set is_effective=0 where id=#{id} or parent_id=#{id}
	</update>
	
	<select id="queryOne" parameterType="long" resultMap="organizationResultMap">
		<include refid="selectSql"/>
		where org.id=#{id}
	</select>
	
	<select id="queryAll">
		<include refid="selectSql"/>
	</select>
	
	<select id="queryByOrganizationName" resultMap="organizationResultMap" parameterType="string">
		<include refid="selectSql"/>
		where org.full_name=#{full_name}
	</select>
	<!-- 根据组织id将组织的is_effective置为false -->
	<update id="updOrgnization" parameterType="long">
		update t_organization set is_effective=0 where id=#{param1}
	</update>
	
</mapper>